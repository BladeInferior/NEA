using UnityEngine;

 public class CharacterController2D : MonoBehaviour
{
    public float MovementSpeed = 10f; // defines starting movement speed as 12
    public float JumpForce = 11f; // defines starting jump force as 10

    private Rigidbody2D rigidbody;

    private Animator anim;

    private GameObject interactMark;
  


    private void Start()
    {
        rigidbody = GetComponent<Rigidbody2D>(); // allows reference to the Rigidbody
        anim = GetComponent<Animator>();
        interactMark = transform.Find("interactMark").gameObject;
    }

    private void Update()
    {
        var movement = Input.GetAxis("Horizontal") * MovementSpeed; // default function that returns 1 for the right arrow key and - 1 for the left arrow key
        transform.position += new Vector3(movement, 0, 0) * Time.deltaTime; // transforms position by value from arrow keys

        if (Input.GetButtonDown("Jump") && Mathf.Abs(rigidbody.velocity.y) < 0.001f) // checks if spacebar is pressed and the player is grounded
		{
            anim.SetBool("Jump", true);
            rigidbody.AddForce(new Vector2(0, JumpForce), ForceMode2D.Impulse); // creates an impulse force into the air 
		}

        if ((rigidbody.velocity.y) < -2.5f)
		{
           // anim.SetBool("Jump", false);
            anim.SetBool("Fall", true);
		}

		if (rigidbody.velocity.y == 0f)
		{
            anim.SetBool("Fall", false);
            anim.SetBool("Jump", false);
        }

            anim.SetFloat("Speed", Mathf.Abs(movement));


        // Swap direction of sprite depending on walk direction
        if (movement < 0)
        {
            transform.localScale = new Vector3(-0.5f, 0.5f, 1);
            interactMark.transform.localScale = new Vector3(-2f, 2f, 1);
        }
        else if (movement > 0)
        {
            transform.localScale = new Vector3(0.5f, 0.5f, 1);
            interactMark.transform.localScale = new Vector3(2f, 2f, 1);
        }

        
    }

    

}
